#include<iostream>
#include<string>
#include<fstream>
#include<iomanip>
#include<sstream>								

using namespace std;

string validateUserName(string);
void createFile(string);
void checkEvenDigit(string, int&);						
void checkOddDigit(string, int&);
void writeDataToFile(string, string);
void readDataFromFile(string, string&);
void displayResults(int, int);

int main() {

	string name;
	string data;
	string input;
	int evenCount = 0;
	int oddCount = 0;

	cout << "Enter your name and press <ENTER>" << endl;
	name = validateUserName(name);
	createFile(name);
	
	while (input != "-1") {

		cout << "Enter anything you want and press<Enter> \nTo stop entering data,simply type:-1 and press <ENTER>" << endl;
		getline(cin, input);

		if (input != "-1") {
			writeDataToFile(input, name);
		}
	}
	
	readDataFromFile(name, data);
	checkEvenDigit(data, evenCount);
	checkOddDigit(data, oddCount);
	displayResults(evenCount, oddCount);

	cout << "good-bye" << endl;
	exit(0);

}

string validateUserName(string name) {
	//The name MUST NOT have spaces, special characters, numbers, or empty spaces

	//This boolean will be used to confirm the entire loop for validation once it is set to true
	bool isvalid = false;

	//While boolean is NOT false
	while (!isvalid) {

		int counter = 0;
		getline(cin, name);

		//This loop will be checking for empty entries, spaces, and non-digit values
		while (counter < name.length() || name.length() == 0)
		{

			if (name.empty())
			{
				cout << "Invalid entry. Try again." << endl;
				getline(cin, name);
				counter = 0;
			}

			else if (isspace(name[counter]) || ispunct(name[counter]))
			{

				cout << "Invalid entry. Try again." << endl;
				getline(cin, name);
				counter = 0;
			}

			else
			{
				counter++;
			}

		}

		isvalid = true;
	}

	return name;
}

void createFile(string name) {
	ofstream outputFile;
	outputFile.open(name + ".txt");
	outputFile.close();
}

void checkEvenDigit(string data, int& evenCount) {

	for (int i = 0; i < data.length(); i++) {

		char character = data[i];

		if (character == '0') {
			evenCount++;
		}
		else if (character == '2') {
			evenCount++;
		}
		else if (character == '4') {
			evenCount++;
		}
		else if (character == '6') {
			evenCount++;
		}
		else if (character == '8') {
			evenCount++;
		}
		
	}

}

void checkOddDigit(string data, int& oddCount) {

	for (int i = 0; i < data.length(); i++) {

		char character = data[i];

		if (character == '1') {
			oddCount++;
		}
		else if (character == '3') {
			oddCount++;
		}
		else if (character == '5') {
			oddCount++;
		}
		else if (character == '7') {
			oddCount++;
		}
		else if (character == '9') {
			oddCount++;
		}

	}

}

void writeDataToFile(string input, string name) {
	ofstream outputFile;
	outputFile.open(name + ".txt", ios::out | ios::app); //the file was overwriting the user inputs without ios::out | ios::app
	outputFile << input << endl;
	outputFile.close();
}

void readDataFromFile(string name, string& data) {

	string line;

	ifstream inputFile;
	inputFile.open(name + ".txt");

	//while (!inputFile.eof()) { //.eof() method was adding an extra line so used while inputFile >> line instead
	while (inputFile >> line) {
		data += line;
	}

	inputFile.close();

}

void displayResults(int evenCount, int oddCount) {


	std::stringstream ss1;
	ss1 << evenCount;
	string num1 = ss1.str();

	std::stringstream ss2;
	ss2 << oddCount;
	string num2 = ss2.str();


	cout << "There is " + num1 + " even digit(s) in the text file you created!" << endl;
	cout << "There is " + num2 + " odd digit(s) in the text file you created!" << endl;

}