/* Application.java */

// ******************************************************************* //
//  This program has been converted as similar as possible to the      //
//  MathGame program from C++. The few minor differences is that JAVA  //
//  doesn't use overload operators like the C++ version. Moreover,     //
//  JAVA's reading and writing method is different from C++. Other 	   //
//  than that, it is a simple program to work on whenever a coding     //
//  language switch is required.                  					   //
//  ****************************************************************** //


import java.lang.String;
import java.util.Scanner;

public class Application {

    public static void main(String[] args) {
        
        Game mathgame = new Game();
        Addition addition = new Addition();
        Subtraction subtraction = new Subtraction();
        Multiplication multiplication = new Multiplication();
        Division division = new Division();

		//getline variables within menu
		String choice;
		char continu1 = 'y';
		
		//Outputs splashscreen, reequest name, and main menu by order
		mathgame.splashScreen(); 
		mathgame.requestName();
		mathgame.menu();
		
		//While loop gives options from 1 - 5 in addition to exiting with 'n/N'
		while (continu1 != 'n' && continu1 != 'N') 
		{
			Scanner input = new Scanner(System.in);
			choice = input.nextLine();

			//All choices use either the same or about the same function calls
			if (choice.equals("1")) {
				addition.randomize(); //retrieves random numbers first
				addition.arithmeticOutput();
				mathgame.updateStats(addition.checkAnswer()); //takes public function result and updates stats
				mathgame.menu(); //return to the main menu
			}

			else if (choice.equals("2")) {
				subtraction.randomize();
				subtraction.arithmeticOutput();
				mathgame.updateStats(subtraction.checkAnswer());
				mathgame.menu();		
			}

			else if (choice.equals("3")) {
				multiplication.randomize();
				multiplication.arithmeticOutput();
				mathgame.updateStats(multiplication.checkAnswer());
				mathgame.menu();		
			}

			else if (choice.equals("4")) {
				division.randomize();
				division.arithmeticOutput();
				mathgame.updateStats(division.checkAnswer());
				mathgame.menu();
			}

			else if (choice.equals("5")) {
				mathgame.displayStats();
				mathgame.menu();
			}

			//Exits loop
			else if (choice.equals("n") || choice.equals("N"))	
			{
				continu1 = 'n';
			}

			else {
				System.out.println("Try again.");
			}

		}

		mathgame.saveStats();
		System.out.println("Thank you for playing. Come back soon!");


        
    }
}

/* Game.java */

import java.util.Scanner;

import java.lang.String;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class Game {

    private String userName;
    private String userEntry;
    private String key;
    private double totalWages;
    private int totalCorrect;
    private int totalWrong;
    private final double REWARD = 0.05;
    private final double PENALTY = 0.03;
    
    public Game() {
        userName = "";
        totalWages = 0.00;
        totalCorrect = 0;
        totalWrong = 0;
    }

    public void splashScreen() {

        System.out.println("***************************************");
        System.out.println("***************************************");
        System.out.println("***************************************");
        System.out.println("***************************************");
        System.out.println("***************************************");
        System.out.println("**********   The MathGame   ***********");
        System.out.println("**********  by Luis Rangel  ***********");
        System.out.println("***************************************");
        System.out.println("***************************************");
        System.out.println("***************************************");
        System.out.println("***************************************");
        System.out.println("***************************************");

    }

    public void menu() {

        System.out.println("********* Choose a problem ************");
        System.out.println("***************************************");
        System.out.println("***************************************");
        System.out.println("************ 1. ADD         ***********");
        System.out.println("************ 2. SUBTRACT    ***********");
        System.out.println("************ 3. MULTIPLY    ***********");
        System.out.println("************ 4. DIVISION    ***********");
        System.out.println("************ 5. STATS       ***********");
        System.out.println("************ n/N to QUIT    ***********");
        System.out.println("***************************************");
        System.out.println("***************************************");
        System.out.println("***************************************");

    }

    public void updateStats(Boolean correct) {

        if (correct == true)
        {
            totalCorrect++;
        }
        else
            totalWrong++;
        }

    public void displayStats() {
        double earned = totalCorrect * REWARD;
        double lost = totalWrong * PENALTY; 
    
        totalWages = earned - lost; 
    
        //Displaying all stats
        System.out.println(userName);
        System.out.print("Total Earnings: $");
        System.out.println(totalWages);
        System.out.print("Total correct: ");
        System.out.println(totalCorrect);
        System.out.print("Total incorrect: ");
        System.out.println(totalWrong);
    }

    public void requestName() {

        //call validateUserEntry
        System.out.println("Enter your name and press <Enter>");
        validateUserEntry();

        //open the file

        //update the fileName depending where you move or store your JAVA folder
        String fileName = "C:/Users/user/Desktop/Current College Classes/JAVA/Application/" + userEntry + ".txt";
        // String fileName = "C:/Users/user/Dropbox/Application/" + userEntry + ".txt";
        File f = new File(fileName);
        String[] contentArray;
        String fileContent = "";

        try {
            if (f.createNewFile()) {
                System.out.println("File created!");
                userName = userEntry;

            } else {
                System.out.println("File already exists! Retrieving existing info within the file.");
                Scanner in = new Scanner(f);

                while(in.hasNextLine()) {
                    fileContent = fileContent.concat(in.nextLine() + "\n");
                }
                
                in.close();

                contentArray = fileContent.split("\n");

                userName = contentArray[0];
                totalWages = Double.parseDouble(contentArray[1]);
                totalCorrect = Integer.parseInt(contentArray[2]);
                totalWrong = Integer.parseInt(contentArray[3]);

            }
        } catch (IOException e) {
            System.out.println("An error ocurred!");
            e.printStackTrace();
        }       

    }

    public void saveStats() {
        
        //reopen the file and save your stats by rewriting the old content in file

        try {
            FileWriter writer = new FileWriter(userName + ".txt");
            writer.write(userName + "\n");
            writer.write(totalWages + "\n");
            writer.write(totalCorrect + "\n");
            writer.write(totalWrong + "\n");
            writer.close();
            //System.out.println("Successfully wrote to the file!");
         } catch (IOException e) {
            //System.out.println("An error ocurred!");
            e.printStackTrace();
         }

    }

    public void validateUserEntry() {
        //add a reference variable to the parameter. Include it with the private variables. In this case, you dont have to pass any parameter then.

        boolean isAlpha = false;
        Scanner input = new Scanner(System.in);
        userEntry = input.nextLine();

        //Loop ensures for ONLY alpha characters

        while (isAlpha == false) {
            isAlpha = userEntry.matches("[a-zA-Z]+");

            if (isAlpha == false) {
                System.out.println("Invalid entry. Try Again.");
                userEntry = input.nextLine();
            } 
        }

    }

    //This method is just in case you want to use a system pause method like C++ but
    //not necessary.
    public void clearScreen() {  

        System.out.println("\nPress Any Key to Continue...");
        // new java.util.Scanner(System.in).nextLine();
        Scanner k = new Scanner(System.in);
        key = k.nextLine();
        // k.close();

        System.out.print("\033[H\033[2J");  
        System.out.flush();  
    }  

}

/* Addition.java */ 

import java.util.Scanner;
import java.util.Random; 

public class Addition {

    private int num1;
	private int num2;
	private int theAnswer;
	private int userResponse;
    
    public Addition() {
        
        theAnswer = 0;
        userResponse = 0;
        randomize(); 
    }

    public void randomize() {

        Random rand = new Random();
        num1 = rand.nextInt(12); 
        num2 = rand.nextInt(12); 
        theAnswer = num1 + num2; 
    }

    public boolean checkAnswer() {
        
        validateUserEntry();

        if (theAnswer == userResponse) {
            System.out.println("Correct");
            return true;
        } else {
            System.out.println("Incorrect");
            return false;
        }

    }

    public void validateUserEntry() {

        boolean isDigit = false;
        Scanner input = new Scanner(System.in);
        String userEntry = input.nextLine();
        
        while (isDigit == false) {
            isDigit = userEntry.matches("[0-9]+");

            if (isDigit == false) {
                System.out.println("Please enter a number. Try Again.");
                userEntry = input.nextLine();
            } 
            // else {
            //     System.out.println("Valid input!");
            // }
        }

        userResponse = Integer.parseInt(userEntry);

    }

    //The c++ program has an overload operator but java doesnt support such method and its really not required.
    //The overload operator was simply outputting the random numbers you have to solve for. That's it.

    public void arithmeticOutput() {
        System.out.println(num1 + " + " + num2);
    }
    
}

/* Subtraction.java */ 

import java.util.Scanner;
import java.util.Random; 

public class Subtraction {

        private int num1;
        private int num2;
        private int theAnswer;
        private int userResponse;
        
        public Subtraction() {
            theAnswer = 0;
            userResponse = 0;
            randomize(); 
        }
    
        public void randomize() {
            
            Random rand = new Random();
            num1 = rand.nextInt(12); 
            num2 = rand.nextInt(12); 
            theAnswer = num1 - num2; 
        }
    
        public boolean checkAnswer() {
            
            validateUserEntry();

            if (theAnswer == userResponse) {
                System.out.println("Correct");
                return true;
            } else {
                System.out.println("Incorrect");
                return false;
            }
        }
    
        public void validateUserEntry() {

            boolean isDigit = false;
            Scanner input = new Scanner(System.in);
            String userEntry = input.nextLine();
        
            while (isDigit == false) {
                isDigit = userEntry.matches("(-?+)[0-9]+");

                if (isDigit == false) {
                    System.out.println("Please enter a number. Try Again.");
                    userEntry = input.nextLine();
                    
                } 
                // else {
                //     System.out.println("Valid input!");
                // }
            }

            userResponse = Integer.parseInt(userEntry);
        }
    
        //The c++ program has an overload operator but java doesnt support such method and its really not required.
        //The overload operator was simply outputting the random numbers you have to solve for. That's it.
    
        public void arithmeticOutput() {
            System.out.println(num1 + " - " + num2);
        }
}

/* Multiplication.java */

import java.util.Scanner;
import java.util.Random; 

public class Multiplication {

        private int num1;
        private int num2;
        private int theAnswer;
        private int userResponse;

        public Multiplication() {
            
            theAnswer = 0;
            userResponse = 0;
            randomize(); 

        }
    
        public void randomize() {
            Random rand = new Random();
            num1 = rand.nextInt(12); 
            num2 = rand.nextInt(12); 
            theAnswer = num1 * num2; 
        }
    
        public boolean checkAnswer() {
            
            validateUserEntry();

            if (theAnswer == userResponse) {
                System.out.println("Correct");
                return true;
            } else {
                System.out.println("Incorrect");
                return false;
            }
        }
    
        public void validateUserEntry() {

            boolean isDigit = false;
            Scanner input = new Scanner(System.in);
            String userEntry = input.nextLine();
        
            while (isDigit == false) {
                isDigit = userEntry.matches("[0-9]+");

                if (isDigit == false) {
                    System.out.println("Please enter a number. Try Again.");
                    userEntry = input.nextLine();
                } 
                // else {
                //     System.out.println("Valid input!");
                // }
            }

            userResponse = Integer.parseInt(userEntry);
        }
    
        //The c++ program has an overload operator but java doesnt support such method and its really not required.
        //The overload operator was simply outputting the random numbers you have to solve for. That's it.
    
        public void arithmeticOutput() {
            System.out.println(num1 + " * " + num2);
        }
    
}

/* Division.java */

import java.util.Scanner;
import java.util.Random; 

public class Division {

        private int num1;
        private int num2;
        private int theAnswer;
        private int userResponse;

        public Division() {
            theAnswer = 0;
            userResponse = 0;
            randomize();
        }
    
        public void randomize() {
            Random rand = new Random();
            num1 = rand.nextInt(12); 
            num2 = rand.nextInt(12); 
            theAnswer = (num1 * num2)/num2; 
        }
    
        public boolean checkAnswer() {
            validateUserEntry();

            if (theAnswer == userResponse) {
                System.out.println("Correct");
                return true;
            } else {
                System.out.println("Incorrect");
                return false;
            }
        }
    
        public void validateUserEntry() {

            boolean isDigit = false;
            Scanner input = new Scanner(System.in);
            String userEntry = input.nextLine();
        
            while (isDigit == false) {
                isDigit = userEntry.matches("[0-9]+");

                if (isDigit == false) {
                    System.out.println("Please enter a number. Try Again.");
                    userEntry = input.nextLine();
                } 
                // else {
                //     System.out.println("Valid input!");
                // }
            }

            userResponse = Integer.parseInt(userEntry);

        }
    
        //The c++ program has an overload operator but java doesnt support such method and its really not required.
        //The overload operator was simply outputting the random numbers you have to solve for. That's it.
    
        public void arithmeticOutput() {
            System.out.println((num1 * num2) + " / " + num2);
        }
    
}
